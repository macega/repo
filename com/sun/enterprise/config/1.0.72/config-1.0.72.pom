<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.sun.enterprise</groupId>
        <artifactId>hk2-parent</artifactId>
        <version>1.0.72</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    
    <artifactId>config</artifactId>
    <name>HK2 configuration module</name>

    <description>${project.name}</description>
    <build>
        <sourceDirectory>src/main/java</sourceDirectory>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>${project.groupId}</groupId>
                <artifactId>osgiversion-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>apt-maven-plugin</artifactId>
                <version>1.0-alpha-4</version>
                <inherited>false</inherited>                    
                <configuration>
                    <!-- forking is necessary here, to avoid the class cast exception as described
                    http://mail-archives.apache.org/mod_mbox/ant-dev/200411.mbox/%3C20041107045146.20929.qmail@nagoya.betaversion.org%3E
                    -->
                    <fork>true</fork>
                    <factory>com.sun.enterprise.tools.apt.MetainfServiceGenerator</factory>
                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.sun.enterprise</groupId>
                        <artifactId>auto-depends-plugin</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <!-- This is needed so that the manifest generated by
                        maven-bundle-plugin:manifest goal is picked up by
                        maven-jar-plugin. -->
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <!-- Generate OSGi bundle headers -->
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.sun.enterprise</groupId>
            <artifactId>auto-depends</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jvnet</groupId>
            <artifactId>tiger-types</artifactId>
            <version>1.2</version>
        </dependency>
	<dependency>
            <!-- 
                 This can't be a provided scope or optional dependency, 
                 because various modules like auto-depends-test/config-test
                 use hk2:run goal and that requires javax.valiation to be found. Only, the APIs are not 
                 enough. We need the full provider as well.
            -->
	    <groupId>org.glassfish.hk2.external</groupId>
	    <artifactId>bean-validator</artifactId>
            <version>${project.version}</version>
        </dependency>
   		<dependency>
        	<groupId>org.glassfish.hk2</groupId>
            <artifactId>class-model</artifactId>
            <version>${project.version}</version>
            <optional>true</optional>
        </dependency>        
    </dependencies>
    <profiles>
        <profile>
            <id>jdk5</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <jdk>1.5</jdk>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>woodstox</groupId>
                    <artifactId>wstx-asl</artifactId>
                    <version>3.2.3</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>javax.xml.stream</groupId>
                    <artifactId>stax-api</artifactId>
                    <version>1.0-2</version>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
